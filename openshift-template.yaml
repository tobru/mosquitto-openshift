apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: mosquitto
objects:
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      app: mosquitto
    name: mosquitto
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: mosquitto:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        uri: ${SOURCE_REPOSITORY_URL}
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: eclipse-mosquitto:1.4.12
      type: Docker
    triggers:
    - github:
        secret: ${GITHUB_WEBHOOK_SECRET}
      type: GitHub
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: ImageStream
  metadata:
    generation: 2
    labels:
      app: mosquitto
    name: eclipse-mosquitto
  spec:
    tags:
    - annotations:
        openshift.io/imported-from: eclipse-mosquitto:1.4.12
      from:
        kind: DockerImage
        name: eclipse-mosquitto:1.4.12
      generation: 2
      importPolicy: {}
      name: 1.4.12
- apiVersion: v1
  kind: ImageStream
  metadata:
    generation: 1
    labels:
      app: mosquitto
    name: mosquitto
  spec:
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: mosquitto:latest
      generation: null
      importPolicy: {}
      name: latest
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    generation: 16
    labels:
      app: mosquitto
    name: mosquitto
  spec:
    replicas: 1
    selector:
      app: mosquitto
      deploymentconfig: mosquitto
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: mosquitto
          deploymentconfig: mosquitto
      spec:
        containers:
        - image: mosquitto
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 1883
            timeoutSeconds: 2
          name: mosquitto
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 1883
            timeoutSeconds: 2
          resources: {}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /mosquitto/config
            name: config-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            name: mosquitto
          name: config-volume
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - mosquitto
        from:
          kind: ImageStreamTag
          name: mosquitto:latest
      type: ImageChange
  status:
    availableReplicas: 1
    observedGeneration: 16
    replicas: 1
    updatedReplicas: 1
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: mosquitto
    name: mosquitto-websocket
  spec:
    host: ${MQTT_WEBSOCKET_URL}
    port:
      targetPort: mqttwebsocket
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: mosquitto
      weight: 100
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: mosquitto
    name: mosquitto
  spec:
    ports:
    - name: mqtt
      port: 1883
      protocol: TCP
      targetPort: 1883
    - name: mqtts
      port: 8883
      protocol: TCP
      targetPort: 8883
    - name: mqttwebsocket
      port: 9002
      protocol: TCP
      targetPort: 9002
    selector:
      app: mosquitto
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: mosquitto
  data:
    mosquitto.conf: |
      # Config file for mosquitto
      user mosquitto

      retry_interval 20
      sys_interval 10
      max_inflight_messages 40
      max_queued_messages 200
      queue_qos0_messages false
      message_size_limit 0
      allow_zero_length_clientid true
      persistent_client_expiration 3m
      allow_duplicate_messages false
      autosave_interval 60
      autosave_on_changes false

      # Persistence configuration
      persistence true
      persistence_location /mosquitto/data/

      # Logging
      connection_messages true
      log_dest stderr
      log_dest stdout
      log_dest file /mosquitto/log/mosquitto.log
      log_type error
      log_type warning
      log_type notice
      log_type information
      log_type all
      log_type debug
      log_timestamp true

      # Listeners
      listener 1883

      #listener 8883
      #cafile /mosquitto/config/ca.crt
      #certfile /mosquitto/config/mosquitto.crt
      #keyfile /mosquitto/config/mosquitto.key
      #require_certificate false

      listener 9002
      protocol websockets

      # Security
      #password_file /mosquitto/config/mosquitto.passwd
      #acl_file /mosquitto/config/mosquitto.acl
    mosquitto.acl: |
      # This affects access control for clients with no username.
      topic read $SYS/#

      #user jane
      #topic owntracks/jjolie/phone

      # This affects all clients.
      pattern write $SYS/broker/connection/%c/state
    mosquitto.passwd: |
      myuser:HTPASSWDPASSWORD
    mosquitto.crt: |
      -----BEGIN CERTIFICATE-----
      -----END CERTIFICATE-----
    mosquitto.key: |
      -----BEGIN RSA PRIVATE KEY-----
      -----END RSA PRIVATE KEY-----
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      -----END CERTIFICATE-----
parameters:
  - name: SOURCE_REPOSITORY_URL
    displayName: Source Repository URL
    description: The URL of the repository with your application source code
    value: https://github.com/tobru/mosquitto-openshift.git
    required: true
  - name: GITHUB_WEBHOOK_SECRET
    description: A secret string used to configure the GitHub webhook
    generate: expression
    from: "[a-zA-Z0-9]{40}"
  - name: MQTT_WEBSOCKET_URL
    displayName: URL for MQTT Websocket route
    required: true
message: "The GitHub webhook secret is ${GITHUB_WEBHOOK_SECRET}"
